{"version":3,"sources":["redux/constant.js","redux/reducers/wInfoDay.js","redux/reducers/wInfoWeek.js","redux/store.js","util/getWeatherIcon.js","components/Buttom.jsx","api/api.jsx","redux/actions/wInfoDay.js","redux/actions/wInfoWeek.js","App.jsx","index.jsx"],"names":["REFRESH","REFRESH_WEEK","initState","temperature","NaN","humid","weatherType","locationName","obsDate","obsHrMin","dateWeekArr","wTypeWeekArr","lowestTempWeekArr","highestTempWeekArr","allReducers","combineReducers","wInfoResult","preState","action","type","data","parseFloat","split","wInfoWeekResult","i","length","slice","createStore","applyMiddleware","thunk","wTwEnComparison","Map","wTypeListArr","handleDayIcon","wTypeDay","findIcon","undefined","includes","getDayWIcon","wTypeDayResult","has","get","Buttom","handleWeekData","wInfoWeek","store","getState","wInfoWeekArr","date","wType","highestTemp","loweshestTemp","handleWTypeSvg","viewBox","className","cx","cy","r","style","width","height","x1","y1","x2","y2","viewbox","this","map","items","keys","Component","Region","regionCode","臺北","臺中","嘉義","高雄","wInfoDayAPI","regionName","endpoint","axios","then","res","weatherElements","records","location","weatherElement","find","item","elementName","parameter","parameterName","obsTime","time","dispatch","parseInt","elementValue","parameterValue","regionCodeValue","locations","Array","fill","j","inThreeDays","startTime","value","dataObj","wInfoWeekAction","catch","err","console","log","wInfoWeekAPI","App","state","debounceTimer","refreshInfo","a","selectedRegion","wResponseInfo","debounceHandler","cb","timing","clearTimeout","setTimeout","wInfo","src","alt","ref","cNode","label","onClick","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e0b056a6.chunk.js","sourcesContent":["export const REFRESH='refresh';\nexport const REFRESH_WEEK='refresh_week';","import { REFRESH } from \"../constant\";\n\nconst initState = {\n  temperature: NaN,\n  humid: \"\",\n  weatherType: \"\",\n  locationName: \"\",\n  obsDate: \"\",\n  obsHrMin: \"\",\n};\nexport default function wInfoDayReducer(preState = initState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case REFRESH:\n      let {\n        temperature,\n        humid,\n        weatherType,\n        locationName,\n        obsDate,\n        obsHrMin,\n      } = data;\n      // console.log(weatherType);\n      humid=parseFloat(humid)*100; \n      obsHrMin=obsHrMin.split(\":\")[0]+\":\"+obsHrMin.split(\":\")[1];\n\n      /* switch (weatherType) {\n        case \"晴\":\n          weatherType = \"sunny\";\n          break;\n        case \"風\":\n          weatherType = \"airflow_wind\";\n          break;\n        case \"多雲\":\n          weatherType = \"cloudy\";\n          break;\n        case \"雨\":\n          weatherType = \"raining\";\n          break;\n        default:\n          weatherType = \"warning_error\";\n      } */\n\n      return {\n        ...preState,\n        temperature,\n        humid,\n        weatherType,\n        locationName,\n        obsDate,\n        obsHrMin,\n      };\n    default:\n      return preState;\n  }\n}\n","import { REFRESH_WEEK } from \"../constant\";\nconst initState = {\n  dateWeekArr: [],\n  wTypeWeekArr: [],\n  lowestTempWeekArr:[],\n  highestTempWeekArr:[],\n};\nexport default function wInfoWeekReducer(preState = initState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case REFRESH_WEEK:\n      let { dateWeekArr, wTypeWeekArr,lowestTempWeekArr,highestTempWeekArr } = data;      \n\n      for(let i=0;i<dateWeekArr.length;i++){        \n        dateWeekArr[i]=dateWeekArr[i].split(\" \")[0].split(\"-\")[1]+\"/\"+dateWeekArr[i].split(\" \")[0].split(\"-\")[2];\n        lowestTempWeekArr[i]=lowestTempWeekArr[i].split('至')[0].split('氏')[1];\n        highestTempWeekArr[i]=highestTempWeekArr[i].split('至')[1].slice(0,-1);;\n      }\n      return { ...preState, dateWeekArr, wTypeWeekArr,lowestTempWeekArr,highestTempWeekArr };\n    default:\n      return preState;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport wInfoDayReducer from \"./reducers/wInfoDay\";\nimport wInfoWeekReducer from \"./reducers/wInfoWeek\";\n\nconst allReducers = combineReducers({\n  wInfoResult: wInfoDayReducer,\n  wInfoWeekResult: wInfoWeekReducer,\n});\n\nexport default createStore(allReducers,applyMiddleware(thunk));\n// export default createStore(allReducers);\n","const wTwEnComparison = new Map([\n  [\"雪\", \"16\"],\n  [\"雷\", \"15\"],\n  [\"電\", \"15\"],\n  [\"大雨\", \"18\"],\n  [\"雨\", \"12\"],\n  [\"多雲\", \"8\"],\n  [\"雲\", \"7\"],\n  [\"晴\", \"1\"],\n  [\"陰\",\"3\"]\n]);\n\nconst wTypeListArr = [\"雪\", \"雷\", \"電\", \"大雨\", \"雨\", \"多雲\", \"雲\", \"晴\",\"陰\"];\n\nconst iconUrl = \"https://www.accuweather.com/images/weathericons/\";\n\nexport function handleDayIcon(wTypeDay) {\n  let findIcon = false;\n  if(wTypeDay===undefined) wTypeDay=\"雲\";\n  for (let i = 0; i < wTypeListArr.length; i++) {\n    if (wTypeDay.includes(wTypeListArr[i])) {\n      findIcon = true;\n      return wTypeListArr[i];\n    }\n  }\n  if (!findIcon) {\n    return \"無法對應天氣類型\";\n  }\n}\n\nexport const getDayWIcon = (wTypeDay) => {\n  let wTypeDayResult = handleDayIcon(wTypeDay);\n\n  if (!wTwEnComparison.has(wTypeDayResult)) {\n    //若天氣類型無法辦別\n    return \"無法獲取天氣類型圖片\";\n  }\n  return `${iconUrl}${wTwEnComparison.get(wTypeDayResult)}.svg`;\n};\n","import React, { Component } from \"react\";\nimport store from \"../redux/store\";\nimport { handleDayIcon } from \"../util/getWeatherIcon\";\nimport \"./Button.css\";\n\nexport default class Buttom extends Component {\n  handleWeekData = () => {\n    let allwInfo = store.getState();\n    let wInfoWeek = allwInfo.wInfoWeekResult;\n    // console.log(wInfoWeek);\n    let wInfoWeekArr = [];\n    for (let i = 0; i < 7; i++) {\n      wInfoWeekArr[i] = {\n        date: wInfoWeek.dateWeekArr[i],\n        wType: wInfoWeek.wTypeWeekArr[i],\n        highestTemp: wInfoWeek.highestTempWeekArr[i],\n        loweshestTemp: wInfoWeek.lowestTempWeekArr[i],\n      };\n    }\n    return wInfoWeekArr;\n  };\n\n  handleWTypeSvg = (wType) => {\n    if (wType === \"晴\") {\n      return (\n        <svg viewBox=\"-50 -50 100 100\">\n          <circle className=\"sun\" cx=\"0\" cy=\"0\" r=\"20\"></circle>\n        </svg>\n      );\n    } else if (wType === \"雲\" || wType === \"多雲\" || wType === \"陰\") {\n      return (\n        <svg\n          style={{ width: \"40px\", height: \"40px\" }}\n          viewBox=\"-50 -50 100 100\"\n        >\n          <circle className=\"sun\" cx=\"0\" cy=\"0\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"0\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-15\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-30\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-25\" cy=\"5\" r=\"15\"></circle>\n          <circle className=\"cloud\" cx=\"-7\" cy=\"10\" r=\"15\"></circle>\n        </svg>\n      );\n    } else if (wType === \"雨\" || wType === \"大雨\") {\n      return (\n        <svg viewBox=\"-63 -30 100 100\">\n          <line className=\"rain\" x1=\"-25\" y1=\"15\" x2=\"-25\" y2=\"35\"></line>\n          <line className=\"rain\" x1=\"-14\" y1=\"5\" x2=\"-14\" y2=\"25\"></line>\n          <line className=\"rain\" x1=\"-5\" y1=\"20\" x2=\"-5\" y2=\"45\"></line>\n          <circle className=\"cloud\" cx=\"0\" cy=\"30\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-15\" cy=\"30\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-30\" cy=\"30\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-25\" cy=\"10\" r=\"15\"></circle>\n          <circle className=\"cloud\" cx=\"-7\" cy=\"15\" r=\"15\"></circle>\n        </svg>\n      );\n    } else {\n      return (\n        <svg viewbox=\"-50 -50 100 100\">\n          <circle className=\"sun\" cx=\"0\" cy=\"0\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"0\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-15\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-30\" cy=\"25\" r=\"20\"></circle>\n          <circle className=\"cloud\" cx=\"-25\" cy=\"5\" r=\"15\"></circle>\n          <circle className=\"cloud\" cx=\"-7\" cy=\"10\" r=\"15\"></circle>\n        </svg>\n      );\n    }\n  };\n\n  render() {\n    let wInfoWeekArr = this.handleWeekData();\n    // console.log(wInfoWeek.dateWeekArr[0]);\n    return (\n      <div className=\"bottom\">\n        {wInfoWeekArr.map((items,keys) => (\n          <div className=\"dayweather\" key={keys}>\n            <h3>{items.date}</h3>                        \n            <h3>{items.highestTemp}°C</h3>\n            <h3 className=\"loweshestTemp\">{items.loweshestTemp}°C</h3>\n            {this.handleWTypeSvg(handleDayIcon(items.wType))}            \n            <h4>{items.wType}</h4>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport store from \"../redux/store\";\nimport { wInfoDayAction } from \"../redux/actions/wInfoDay\";\nimport { wInfoWeekAction } from \"../redux/actions/wInfoWeek\";\n\nexport const Region = {\n  TAIPEI: \"臺北\",\n  TAICHUNG: \"臺中\",\n  CHIAYI: \"嘉義\",\n  KOAHSIUNG: \"高雄\", //高雄地區當日天氣，數據偶發異常，暫以嘉義代替\n};\n/* 適用一週天氣預報 */\nconst regionCode = {\n  臺北: \"F-D0047-063\",\n  臺中: \"F-D0047-075\",\n  嘉義: \"F-D0047-031\",\n  高雄: \"F-D0047-067\",\n};\n\nexport const wInfoDayAPI = (regionName) => {\n  const endpoint = `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&locationName=${regionName}`;\n\n  axios\n    .get(endpoint)\n    .then((res) => {\n      const weatherElements = res.data.records.location[0].weatherElement;\n\n      const temperature = weatherElements.find((item) => {\n        return item.elementName === \"TEMP\";\n      });\n      const humid = weatherElements.find((item) => {\n        return item.elementName === \"HUMD\";\n      });\n      const weatherType = weatherElements.find((item) => {\n        return item.elementName === \"Weather\";\n      });\n\n      const parameters = res.data.records.location[0].parameter;\n\n      const locationName = parameters.find((item) => {\n        return item.parameterName === \"CITY\";\n      });\n\n      const obsTime = res.data.records.location[0].time.obsTime;\n      const obsDate = obsTime.split(\" \")[0];\n      const obsHrMin = obsTime.split(\" \")[1];\n\n      store.dispatch(\n        wInfoDayAction({\n          temperature: parseInt(temperature.elementValue),\n          humid: humid.elementValue,\n          weatherType: weatherType.elementValue,\n          locationName: locationName.parameterValue,\n          obsDate,\n          obsHrMin,\n        })\n      );\n\n      wInfoWeekAPI(regionCode[regionName]);\n    })\n    .catch((err) => console.log(\"獲取當日天氣錯誤，其原因為\", err));\n};\n\nfunction wInfoWeekAPI(regionCodeValue) {\n  const endpoint = `https://opendata.cwb.gov.tw/api/v1/rest/datastore/${regionCodeValue}?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&format=JSON&elementName=WeatherDescription&sort=time`;\n  axios\n    .get(endpoint)\n    .then((res) => {\n      let weatherElement =\n        res.data.records.locations[0].location[0].weatherElement[0];\n\n      let dateWeekArr = new Array(7).fill(null);\n      let wTypeWeekArr = new Array(7).fill(null);\n      let lowestTempWeekArr = new Array(7).fill(null);\n      let highestTempWeekArr = new Array(7).fill(null);\n\n      let j = 0;\n      let inThreeDays = 0; //判別是否超出3天\n      for (let i = 1; i <= 13; i += 2) {\n        dateWeekArr[j] = weatherElement.time[i].startTime;\n        wTypeWeekArr[j] =\n          weatherElement.time[i].elementValue[0].value.split(\"。\")[0];\n        if (i >= 7) {\n          inThreeDays = -1; //如果超過3天，會少掉降雨機率的欄位\n        } else {\n          inThreeDays = 0;\n        }\n        lowestTempWeekArr[j] =\n          weatherElement.time[i].elementValue[0].value.split(\"。\")[\n            2 + inThreeDays\n          ];\n\n        highestTempWeekArr[j] =\n          weatherElement.time[i].elementValue[0].value.split(\"。\")[\n            2 + inThreeDays\n          ];\n        j++;\n      }\n\n      let dataObj = {\n        dateWeekArr,\n        wTypeWeekArr,\n        lowestTempWeekArr,\n        highestTempWeekArr,\n      };\n      \n      store.dispatch(wInfoWeekAction(dataObj));     \n    })\n    .catch((err) => {\n      console.log(\"獲取一週天氣錯誤，其原因為\", err);\n    });\n}\n","import { REFRESH } from \"../constant\"\n\nexport const wInfoDayAction=(data)=>({type:REFRESH,data})","import { REFRESH_WEEK } from \"../constant\"\n\nexport const wInfoWeekAction=(dataObj)=>({type:REFRESH_WEEK,data:dataObj})","import React, { Component } from \"react\";\nimport store from \"./redux/store\";\nimport Buttom from \"./components/Buttom\";\nimport { wInfoDayAPI, Region } from \"./api/api\";\nimport { getDayWIcon } from \"./util/getWeatherIcon\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    debounceTimer: null,\n  };\n\n  componentDidMount() {\n    this.refreshInfo();\n  }\n\n  /* get selected value then call api*/\n  refreshInfo = async () => {\n    const { value } = this.selectedRegion;\n    const wResponseInfo = await wInfoDayAPI(value);\n    console.log(wResponseInfo);\n  };\n\n  // 預防頻繁call api\n  debounceHandler = (cb, timing) => {\n    let debounceTimer = this.state.debounceTimer;\n    return () => {\n      if (debounceTimer !== null) {\n        clearTimeout(debounceTimer);\n      }\n      debounceTimer = setTimeout(() => {\n        cb();\n        debounceTimer = null;\n      }, timing);\n    };\n  };\n\n  render() {\n    const allInfo = store.getState();\n    let wInfo = allInfo.wInfoResult;\n\n    return (\n      <div className=\"daybox\">\n        <label>\n          <div className=\"top\">\n            <img\n              className=\"weatherType\"\n              src={getDayWIcon(wInfo.weatherType)}\n              alt={wInfo.weatherType}\n            />\n\n            <div className=\"text-area\">\n              <div className=\"temperature\">{wInfo.temperature}°C</div>\n              <div className=\"address\">地區:&nbsp;{wInfo.locationName}</div>\n              <div className=\"infos\">\n                <div className=\"humidity\">濕度:&nbsp;{wInfo.humid}%</div>\n                <div className=\"time\">日期&emsp;{wInfo.obsDate}</div>\n                <div>觀測時間&emsp;{wInfo.obsHrMin}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"choose-area\">\n            <text>選擇地區</text>\n            <select ref={(cNode) => (this.selectedRegion = cNode)}>\n              <optgroup label=\"北部\"></optgroup>\n              <option value={Region.TAIPEI}>{Region.TAIPEI}</option>\n              <optgroup label=\"中部\"></optgroup>\n              <option value={Region.TAICHUNG}>{Region.TAICHUNG}</option>\n              <optgroup label=\"南部\"></optgroup>\n              <option value={Region.CHIAYI}>{Region.CHIAYI}</option>\n            </select>\n            <button onClick={this.debounceHandler(this.refreshInfo, 1000)}>\n              刷新\n            </button>\n          </div>\n\n          <Buttom />\n        </label>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\nstore.subscribe(()=>{\n    ReactDOM.render(<App/>,document.getElementById('root'));\n})"],"sourceRoot":""}